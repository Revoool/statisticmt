import pandas as pd
import streamlit as st
import plotly.express as px

# ========================
# –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã
# ========================

column_names = [
    "–ê—Ä—Ç–∏–∫—É–ª", "title", "category", "subcategory", "–∑–∞–∫—É–ø–æ—á–Ω–∞—è —Ü–µ–Ω–∞", "–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏",
]

months = ["06.2024", "07.2024", "08.2024", "09.2024", "10.2024", "11.2024", "12.2024", "01.2025", "02.2025", "03.2025", "04.2025"]
for m in months:
    column_names.extend([f"{m}_—à—Ç", f"{m}_—Ü–µ–Ω–∞"])

column_names += ["–≤—Å–µ–≥–æ –ø—Ä–æ–¥–∞–Ω–Ω–æ —Ç–æ–≤–∞—Ä–∞", "–ó–∞–∫—É–ø–æ—á–Ω–∞—è —Ü–µ–Ω–∞ –≤—Å–µ–≥–æ", "–ò—Ç–æ–≥–æ –ø—Ä–æ–¥–∞–∂",
                 "–ü–µ—Ä–≤–∞—è —Ü–µ–Ω–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥", "–ü–æ—Å–ª–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥", "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã –≤ –≥—Ä–∏–≤–Ω–∞—Ö",
                 "–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥", "MAX / MIN —Ü–µ–Ω–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥", "", "–í—Å–µ–≥–æ –º–µ—Å—è—Ü–µ–≤ —Å –ø—Ä–æ–¥–∞–∂–∞–º–∏ (—Å–µ–∑–æ–Ω–Ω–æ—Å—Ç—å)",
                 "–¢—Ä–µ–Ω–¥ –ø—Ä–æ–¥–∞–∂", "–í–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å", "–ú–µ—Å—è—Ü –º–∞–∫—Å –ø—Ä–æ–¥–∞–∂"]

df = pd.read_csv("Summar - –û–±—â–∞—è —Å–≤–æ–¥–Ω–∞—è.csv", names=column_names, skiprows=1)

# –û—á–∏—Å—Ç–∫–∞ —á–∏—Å–ª–æ–≤—ã—Ö –ø–æ–ª–µ–π
def parse_price(value):
    try:
        return float(str(value).replace("–≥—Ä–Ω.", "").replace(",", ".").replace("¬†", "").strip())
    except:
        return None

price_columns = [col for col in df.columns if "_—Ü–µ–Ω–∞" in col]
for col in price_columns:
    df[col] = df[col].apply(parse_price)

df["–ò—Ç–æ–≥–æ –ø—Ä–æ–¥–∞–∂"] = df["–ò—Ç–æ–≥–æ –ø—Ä–æ–¥–∞–∂"].apply(parse_price)
df["–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏"] = df["–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏"].apply(parse_price)


def get_first_price(row):
    for col in price_columns:
        if pd.notnull(row[col]):
            return row[col]
    return None

def get_last_price(row):
    for col in reversed(price_columns):
        if pd.notnull(row[col]):
            return row[col]
    return None

df["–ü–µ—Ä–≤–∞—è —Ü–µ–Ω–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥ (recalc)"] = df.apply(get_first_price, axis=1)
df["–ü–æ—Å–ª–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥ (recalc)"] = df.apply(get_last_price, axis=1)
df["–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã –≤ –≥—Ä–∏–≤–Ω–∞—Ö (recalc)"] = df["–ü–æ—Å–ª–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥ (recalc)"] - df["–ü–µ—Ä–≤–∞—è —Ü–µ–Ω–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥ (recalc)"]
df["–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã % (recalc)"] = (df["–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã –≤ –≥—Ä–∏–≤–Ω–∞—Ö (recalc)"] / df["–ü–µ—Ä–≤–∞—è —Ü–µ–Ω–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥ (recalc)"] * 100).round(2)

# ========================
# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å Streamlit
# ========================

st.set_page_config(page_title="üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞", layout="wide")

tab1, tab2, tab3 = st.tabs(["üìà –¶–µ–Ω—ã –ø–æ —Ç–æ–≤–∞—Ä–∞–º", "üìä –ò—Ç–æ–≥–∏ –ø–æ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º", "üìâ –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω –ø–æ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º"])

with tab1:
    st.title("üìà –ê–Ω–∞–ª–∏–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω")

    if "subcategory" not in df.columns:
        st.error("‚ùå –ö–æ–ª–æ–Ω–∫–∞ 'subcategory' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        st.stop()

    subcat = st.selectbox("–ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è", df["subcategory"].dropna().unique())
    filtered = df[df["subcategory"] == subcat]

    st.dataframe(filtered[[
        "–ê—Ä—Ç–∏–∫—É–ª", "title", "subcategory",
        "–ü–µ—Ä–≤–∞—è —Ü–µ–Ω–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥ (recalc)",
        "–ü–æ—Å–ª–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥ (recalc)",
        "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã –≤ –≥—Ä–∏–≤–Ω–∞—Ö (recalc)",
        "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã % (recalc)"
    ]])


with tab2:
    st.title("üìä –ò—Ç–æ–≥–∏ –ø–æ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º")

    df_summary = pd.read_csv("Summar - –°–≤–æ–¥–Ω–∞—è subcategory.csv")

    def clean_num(x):
        try:
            return float(str(x).replace(",", ".").replace("¬†", "").replace("%", "").strip())
        except:
            return None

    num_cols = df_summary.columns[1:]
    for col in num_cols:
        df_summary[col] = df_summary[col].apply(clean_num)

    st.dataframe(df_summary)

    fig2 = px.bar(
        df_summary.sort_values("–û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å", ascending=False),
        x="–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏",
        y="–û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å",
        title="üì¶ –ü—Ä–∏–±—ã–ª—å –ø–æ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º",
        labels={"–û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å": "–≥—Ä–Ω"},
    )
    st.plotly_chart(fig2)

with tab3:
    st.title("–î–∏–Ω–∞–º–∏–∫–∞ —Ü–µ–Ω –ø–æ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º")

    # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    df_grouped = df.dropna(subset=["subcategory"]).groupby("subcategory").agg(
        –°—Ä–µ–¥–Ω–µ–µ_–∏–∑–º–µ–Ω–µ–Ω–∏–µ_—Ü–µ–Ω—ã_–ø—Ä–æ—Ü=("–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã % (recalc)", "mean"),
        –ú–∞–∫—Å_—Ä–æ—Å—Ç_—Ü–µ–Ω—ã_–≥—Ä–Ω=("–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã –≤ –≥—Ä–∏–≤–Ω–∞—Ö (recalc)", "max"),
        –ú–∏–Ω_–ø–∞–¥–µ–Ω–∏–µ_—Ü–µ–Ω—ã_–≥—Ä–Ω=("–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã –≤ –≥—Ä–∏–≤–Ω–∞—Ö (recalc)", "min"),
        –¢–æ–≤–∞—Ä–æ–≤_–≤_–ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏=("–ê—Ä—Ç–∏–∫—É–ª", "count")
    ).round(2).reset_index()

    # KPI
    col1, col2, col3 = st.columns(3)
    col1.metric("–°—Ä–µ–¥–Ω–∏–π —Ä–æ—Å—Ç —Ü–µ–Ω", f"{df_grouped['–°—Ä–µ–¥–Ω–µ–µ_–∏–∑–º–µ–Ω–µ–Ω–∏–µ_—Ü–µ–Ω—ã_–ø—Ä–æ—Ü'].mean():.2f}%")
    col2.metric("–ú–∞–∫—Å. —Ä–æ—Å—Ç —Ü–µ–Ω—ã (–≥—Ä–Ω)", f"{df_grouped['–ú–∞–∫—Å_—Ä–æ—Å—Ç_—Ü–µ–Ω—ã_–≥—Ä–Ω'].max():.2f} –≥—Ä–Ω")
    col3.metric("–ú–∏–Ω. –ø–∞–¥–µ–Ω–∏–µ —Ü–µ–Ω—ã (–≥—Ä–Ω)", f"{df_grouped['–ú–∏–Ω_–ø–∞–¥–µ–Ω–∏–µ_—Ü–µ–Ω—ã_–≥—Ä–Ω'].min():.2f} –≥—Ä–Ω")

    # üìã –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏
    st.markdown("### üìã –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –ø–æ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º")
    st.dataframe(df_grouped)

    # ‚ö†Ô∏è –ö–∞–Ω–¥–∏–¥–∞—Ç—ã –Ω–∞ –ø–æ–≤—ã—à–µ–Ω–∏–µ —Ü–µ–Ω—ã
    st.markdown("### –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –ø–∞–¥–µ–Ω–∏–µ–º –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ–º —Ä–æ—Å—Ç–∞ —Ü–µ–Ω")
    min_items = 5
    candidates = df_grouped[
        (df_grouped["–°—Ä–µ–¥–Ω–µ–µ_–∏–∑–º–µ–Ω–µ–Ω–∏–µ_—Ü–µ–Ω—ã_–ø—Ä–æ—Ü"] < 1) &
        (df_grouped["–¢–æ–≤–∞—Ä–æ–≤_–≤_–ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏"] > min_items)
    ].copy()

    # –í—ã—Ä—É—á–∫–∞: –¥–æ –∏ –ø–æ—Å–ª–µ +10%
    potentials = (
        df[df["subcategory"].isin(candidates["subcategory"])]
        .groupby("subcategory", as_index=False)["–ò—Ç–æ–≥–æ –ø—Ä–æ–¥–∞–∂"]
        .sum()
        .rename(columns={"–ò—Ç–æ–≥–æ –ø—Ä–æ–¥–∞–∂": "–ò—Ç–æ–≥–æ –ø—Ä–æ–¥–∞–∂ (–¥–æ)"})
    )
    potentials["–ò—Ç–æ–≥–æ –ø—Ä–æ–¥–∞–∂ (–µ—Å–ª–∏ +10%)"] = (potentials["–ò—Ç–æ–≥–æ –ø—Ä–æ–¥–∞–∂ (–¥–æ)"] * 1.10).round(0)
    potentials["–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–æ—Å—Ç–∞ –ø—Ä–∏ +10%"] = (
        potentials["–ò—Ç–æ–≥–æ –ø—Ä–æ–¥–∞–∂ (–µ—Å–ª–∏ +10%)"] - potentials["–ò—Ç–æ–≥–æ –ø—Ä–æ–¥–∞–∂ (–¥–æ)"]
    ).round(0)

    # –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏: –¥–æ –∏ –ø–æ—Å–ª–µ +10%
    avg_prices = (
        df[df["subcategory"].isin(candidates["subcategory"])]
        .groupby("subcategory", as_index=False)["–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏"]
        .mean()
        .rename(columns={"–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏": "–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ (–¥–æ)"})
    )
    avg_prices["–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ (–µ—Å–ª–∏ +10%)"] = (avg_prices["–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ (–¥–æ)"] * 1.10).round(2)

    # –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ
    candidates = candidates.merge(potentials, on="subcategory", how="left")
    candidates = candidates.merge(avg_prices, on="subcategory", how="left")

    # –í—ã–≤–æ–¥
    st.dataframe(candidates[[
        "subcategory",
        "–°—Ä–µ–¥–Ω–µ–µ_–∏–∑–º–µ–Ω–µ–Ω–∏–µ_—Ü–µ–Ω—ã_–ø—Ä–æ—Ü",
        "–¢–æ–≤–∞—Ä–æ–≤_–≤_–ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏",
        "–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ (–¥–æ)",
        "–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ (–µ—Å–ª–∏ +10%)",
        "–ò—Ç–æ–≥–æ –ø—Ä–æ–¥–∞–∂ (–¥–æ)",
        "–ò—Ç–æ–≥–æ –ø—Ä–æ–¥–∞–∂ (–µ—Å–ª–∏ +10%)",
        "–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–æ—Å—Ç–∞ –ø—Ä–∏ +10%"
    ]].sort_values("–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–æ—Å—Ç–∞ –ø—Ä–∏ +10%", ascending=False))

    # –û–±—â–∏–π –∏—Ç–æ–≥
    total_gain = candidates["–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–æ—Å—Ç–∞ –ø—Ä–∏ +10%"].sum()
    st.markdown(f"üí∞ –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è —Å—É–º–º–∞—Ä–Ω–∞—è –ø—Ä–∏–±–∞–≤–∫–∞ –∫ –≤—ã—Ä—É—á–∫–µ: `{total_gain:,.0f} –≥—Ä–Ω`")

    # üìä –ì—Ä–∞—Ñ–∏–∫–∏
    fig3 = px.bar(
        df_grouped.sort_values("–°—Ä–µ–¥–Ω–µ–µ_–∏–∑–º–µ–Ω–µ–Ω–∏–µ_—Ü–µ–Ω—ã_–ø—Ä–æ—Ü", ascending=False),
        x="subcategory",
        y="–°—Ä–µ–¥–Ω–µ–µ_–∏–∑–º–µ–Ω–µ–Ω–∏–µ_—Ü–µ–Ω—ã_–ø—Ä–æ—Ü",
        labels={"–°—Ä–µ–¥–Ω–µ–µ_–∏–∑–º–µ–Ω–µ–Ω–∏–µ_—Ü–µ–Ω—ã_–ø—Ä–æ—Ü": "–°—Ä–µ–¥–Ω–∏–π —Ä–æ—Å—Ç, %"},
        title="üìä –°—Ä–µ–¥–Ω–µ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã –ø–æ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º",
    )
    st.plotly_chart(fig3, use_container_width=True)

    st.markdown("### üîº –¢–æ–ø-5 –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø–æ —Ä–æ—Å—Ç—É —Ü–µ–Ω")
    fig4 = px.bar(
        df_grouped.sort_values("–°—Ä–µ–¥–Ω–µ–µ_–∏–∑–º–µ–Ω–µ–Ω–∏–µ_—Ü–µ–Ω—ã_–ø—Ä–æ—Ü", ascending=False).head(5),
        x="subcategory",
        y="–°—Ä–µ–¥–Ω–µ–µ_–∏–∑–º–µ–Ω–µ–Ω–∏–µ_—Ü–µ–Ω—ã_–ø—Ä–æ—Ü",
        color="–°—Ä–µ–¥–Ω–µ–µ_–∏–∑–º–µ–Ω–µ–Ω–∏–µ_—Ü–µ–Ω—ã_–ø—Ä–æ—Ü",
        labels={"–°—Ä–µ–¥–Ω–µ–µ_–∏–∑–º–µ–Ω–µ–Ω–∏–µ_—Ü–µ–Ω—ã_–ø—Ä–æ—Ü": "%"},
    )
    st.plotly_chart(fig4, use_container_width=True)

    st.markdown("### üîΩ –¢–æ–ø-5 –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø–æ —Å–Ω–∏–∂–µ–Ω–∏—é —Ü–µ–Ω")
    fig5 = px.bar(
        df_grouped.sort_values("–°—Ä–µ–¥–Ω–µ–µ_–∏–∑–º–µ–Ω–µ–Ω–∏–µ_—Ü–µ–Ω—ã_–ø—Ä–æ—Ü", ascending=True).head(5),
        x="subcategory",
        y="–°—Ä–µ–¥–Ω–µ–µ_–∏–∑–º–µ–Ω–µ–Ω–∏–µ_—Ü–µ–Ω—ã_–ø—Ä–æ—Ü",
        color="–°—Ä–µ–¥–Ω–µ–µ_–∏–∑–º–µ–Ω–µ–Ω–∏–µ_—Ü–µ–Ω—ã_–ø—Ä–æ—Ü",
        labels={"–°—Ä–µ–¥–Ω–µ–µ_–∏–∑–º–µ–Ω–µ–Ω–∏–µ_—Ü–µ–Ω—ã_–ø—Ä–æ—Ü": "%"},
    )
    st.plotly_chart(fig5, use_container_width=True)
